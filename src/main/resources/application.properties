logging.level.org.springframework.web=INFO

# MVC View Resolver - /WEB-INF/pages/
#spring.mvc.view.prefix= /WEB-INF/pages/
#spring.mvc.view.suffix= .jsp

#========================== Error Handlers « https://www.baeldung.com/spring-response-status
#By default thymeleaf will look in "src/main/resources/templates" with ".html" files (jar deploy)
#To deploy as war change default configuration in application.properties
# Disabling the Whitelabel Error Pages, Default handled by the tomcat container's
# server.error.whitelabel.enabled = false
#==========================
#spring.thymeleaf.prefix= /WEB-INF/errorFiles/
#spring.thymeleaf.suffix= .html
#spring.thymeleaf.cache= false
spring.freemarker.template-loader-path: classpath:/public
spring.freemarker.suffix: .jsp

#spring.mvc.static-path-pattern=/resources/**


#URL: localhost:8080/Project/staticFiles/path/file.js « static resources in the ${webappRoot}/resources directory.
#Example: <mvc:resources mapping="/staticFiles/path/**" location="/staticFilesFolder/js/" cache-period="60"/>
#==========================
#CONDITION EVALUATION DELTA
#==========================
#Positive matches:None
#Negative matches: ThymeleafAutoConfiguration.ThymeleafWebMvcConfiguration#resourceUrlEncodingFilter:
#	Did not match: - @ConditionalOnEnabledResourceChain did not find class org.webjars.WebJarAssetLocator
#	Matched:       - @ConditionalOnMissingBean (types: org.sf.web.servlet.resource.ResourceUrlEncodingFilter; )
spring.resources.chain.strategy.content.enabled=true
spring.resources.chain.strategy.content.paths=/**
# On remvoind we get above exception.


# Disabling the Whitelabel Error Pages, Default handled by the tomcat container's 
# defaultErrorView = "resources/templates/error.html"
server.error.whitelabel.enabled = false
# Positive matches:
#   ErrorMvcAutoConfiguration.WhitelabelErrorViewConfiguration matched:
#      - @ConditionalOnProperty (server.error.whitelabel.enabled) matched (OnPropertyCondition)
#      - ErrorTemplate Missing did not find error template view (ErrorMvcAutoConfiguration.ErrorTemplateMissingCondition)
#   ErrorMvcAutoConfiguration.WhitelabelErrorViewConfiguration#beanNameViewResolver matched:
#      - @ConditionalOnMissingBean (types: org.springframework.web.servlet.view.BeanNameViewResolver; SearchStrategy: all) did not find any beans (OnBeanCondition)
#   ErrorMvcAutoConfiguration.WhitelabelErrorViewConfiguration#defaultErrorView matched:
#      - @ConditionalOnMissingBean (names: error; SearchStrategy: all) did not find any beans (OnBeanCondition)


# By default, Spring Boot applications run on an embedded Tomcat via port 8080.
#server.port = 8090

#DataSource Configuration
spring.datasource.driver-class-name=com.mysql.jdbc.Driver
spring.datasource.url=jdbc:mysql://localhost:3306/yashdb
spring.datasource.username=root
spring.datasource.password=

#Connection Pool Configuration « `spring.datasource.*` properties are related to database
spring.datasource.tomcat.max-wait=20000
spring.datasource.tomcat.max-active=50
spring.datasource.tomcat.max-idle=20
spring.datasource.tomcat.min-idle=15

### Hibernate Properties « `spring.jpa.hibernate.*` properties are related to hibernate.
spring.jpa.show-sql=true
# Hibernate ddl auto (create, create-drop, validate, update)
spring.jpa.hibernate.ddl-auto=update
# Allows Hibernate to generate SQL optimized for a particular DBMS
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQL5Dialect

# Naming strategy
spring.jpa.hibernate.naming.physical-strategy=org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl
# MySQLSyntaxErrorException: Unknown column 'file_path' in 'field list'
#org.hibernate{hibernate-core:4.3.1.Final,hibernate-validator:4.3.1.Final,hibernate-entitymanager:4.3.5.Final}
#javax.validation{validation-api:1.0.0.GA}
#spring.jpa.hibernate.naming.strategy=org.hibernate.cfg.DefaultComponentSafeNamingStrategy

# Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.

# logging
#logging.pattern.console=%d{yyyy-MM-dd HH:mm:ss} %-5level %logger{36} - %msg%n
#logging.level.org.hibernate.SQL=debug